= Tools
You'll need the some tools for this class. Please be sure you have the indicated versions.

There are excellent instructions here:

http://developer.android.com/sdk/installing.html#Installing

The notes below assume you are following these instructions: they just provide additional information.

As an alternative, you might try one of the pre-build development environments, here:

http://marakana.com/support/android_setup.html

If you do use one of these prebuilt envs, please also walk through the steps below, to make sure you have all the necessary tools.


= Notes:

== Java (1.6 SDK)
Be sure you get the JDK, not the JRE. Any 1.6 will do: don't fret the minor version.

If you are using Mac OS Lion, the instructions here may be helpful:

http://marakana.com/support/android_setup.html

== Ant
For this class, you will not need Apache ant.

== Eclipse (3.7 Indigo)
Please be sure you have Eclipse Indigo. Choose either the Classic or the Java Developer's version, probably 64-bit. If you installing it for the first time, start it up and dismiss the greeting page. Locate the Project Explorer pane on the upper right.

== The Android SDK (r17 or better)
If this is your first install, you'll need to download the SDK starter package. If you are using Windows, use the installer. If not, just unzip the package somewhere convenient. Be sure that the fully qualified path to the installation doesn't have spaces in it.

Again, the instructions at:

http://marakana.com/support/android_setup.html

... may be helpful.

== Eclipse ADT plugin (r17 or better)
Follow the instructions to install r17 of the ADT plugin, in Eclipse. Be sure that, after you restart Eclipse to complete the installation, you use the Preferences to set the path to the ADK in the plugin.

== Android APIs
You will need two versions of the SDK platform, API levels 10 and 15 Once the ADT is completely installed, restart Eclipse again and look in the toolbar. Find the Android SDK manager (a box with a white, downward pointing arrow, and the Android robot peeping out the top). Open it and verify that you have v17 of the Android SDK Tools, and SDK Platforms 10 and 15. You will need the ARM EABi Image too.

At this point you should have a working Android environment. There are a couple more things you need to do:

== Eclipse EGIT plugin (1.3)
From Eclipse, Help > Install New Software. In the "Work with:" selector, choose: Indigo -http://download.Eclipse.org/releases/indigo After a while the pane below will populate (you have to be connected...). Open the Collaboration item and check the box to the left of "Eclipse EGit" (v1.3.0.02...). Choose "Next", at the bottom right of the page and continue to complete the installation. You'll have to restart Eclipse again.

== The class code repository
From Eclipse, File > Import. In the selection box find Git > Projects from Git. In the Select Repository Source dialog, select URI and, in the next dialog, enter the URL:

https://github.com/bmeike/Yamba-12_08_27.git

There rest of the box should populate. You should be able to accept the defaults for the rest of the dialogs (you might want to choose another Local Destination for your project). Import existing projects and finish.

Immediately, create a new, development branch for yourself. In the Package Explorer, left click the newly created project (named "Yamba") and Team > Switch To > New Branch. I suggest a branch name of "dev1".

== Create two Emulators
Find and click the Android Virtual Device Manager in the toolbar. It is right next to the SDK manager, used above. In the pane that comes up, select "New...". Use the subsequent dialog to create an AVD. Call it whatever you like but be sure that its target is "Google APIs Level 15" and this it has a 1G SD card. Everything else should be fine as defaulted. Don't enable snapshots, yet. Repeat this process to create another emulator for API level 10, with a 512M SD card

== Verify your environment
Left click the Yamba project (again, in the Package Explorer) and choose Run As > Java Application. You should see the output "Hello from java" in a console window.

Next, left click the HelloAndroid and choose Run As > Android Application. This should start the emulator. You will have to unlock it by dragging the green bar to the right. Eventually ou should see a window labelled "Yamba", with the text "Hello World, StatusActivity".

You should be able to do this with both emulators and both SDKs

